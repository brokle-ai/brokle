# Production overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
# Adds production-specific optimizations: resource limits, secrets, restart policies

services:
  # Production Backend API
  backend:
    environment:
      ENV: production  # Override to production
      LOG_LEVEL: info  # Override to info
      DATABASE_URL: ${DATABASE_URL}  # Production database URL
      CLICKHOUSE_URL: ${CLICKHOUSE_URL}  # Production ClickHouse URL
      REDIS_URL: ${REDIS_URL}  # Production Redis URL
      JWT_SECRET: ${JWT_SECRET}  # Production JWT secret
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GOOGLE_AI_API_KEY: ${GOOGLE_AI_API_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    restart: unless-stopped
    deploy:
      replicas: 3  # 3 server instances for API traffic
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Production Workers
  worker:
    environment:
      ENV: production  # Override to production
      LOG_LEVEL: info  # Override to info
      DATABASE_URL: ${DATABASE_URL}  # Production database URL
      CLICKHOUSE_URL: ${CLICKHOUSE_URL}  # Production ClickHouse URL
      REDIS_URL: ${REDIS_URL}  # Production Redis URL
    restart: unless-stopped
    deploy:
      replicas: 10  # 10 worker instances for background processing
      resources:
        limits:
          cpus: '4'      # Workers need more CPU for batch processing
          memory: 4G     # Workers need more memory
        reservations:
          cpus: '1'
          memory: 1G

  # Production frontend
  frontend:
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}  # Production API URL
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL}    # Production WebSocket URL
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  # Production database configuration
  postgres:
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-brokle_prod}  # Override to production DB
      POSTGRES_USER: ${POSTGRES_USER:-brokle}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Require secure password
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G

  # Production ClickHouse
  clickhouse:
    environment:
      - CLICKHOUSE_DB=${CLICKHOUSE_DB:-default}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER:-brokle}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    volumes:
      - clickhouse_prod_data:/var/lib/clickhouse
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G

  # Production Redis
  redis:
    volumes:
      - redis_prod_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 128M

  # Production monitoring
  prometheus:
    volumes:
      - prometheus_prod_data:/prometheus
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 512M

  grafana:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL}
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY}
    volumes:
      - grafana_prod_data:/var/lib/grafana
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M

  nginx:
    volumes:
      - ./configs/nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./configs/ssl:/etc/nginx/ssl
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

volumes:
  postgres_prod_data:
  clickhouse_prod_data:
  redis_prod_data:
  prometheus_prod_data:
  grafana_prod_data: